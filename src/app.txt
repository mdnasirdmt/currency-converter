

import { useState } from "react";
import InputBox from "./components/InputBox";
import useCurrencyInfo from "./hooks/useCurrencyInfo";

function App() {
  const [amount, setAmount] = useState(0);
  const [from, setFrom] = useState("usd");
  const [to, setTo] = useState("inr");
  const [convertedAmount, setConvertedAmount] = useState(0);

  const currencyInfoFrom = useCurrencyInfo(from);
  const currencyInfoTo = useCurrencyInfo(to);

  const options = Object.keys(currencyInfoFrom);

  const swap = () => {
    // Update the converted amount before swapping
    setConvertedAmount(amount * currencyInfoTo[from as any]);
    setFrom(to);
    setTo(from);
  };

  const convert = () => {
    console.log("Convert function is called");
    
    // Check if 'amount' is a valid number
    if (typeof amount !== 'number') {
      console.error("Invalid 'amount' value:", amount);
      return;
    }
    
    // Check if the conversion rate is a valid number
    const conversionRate = currencyInfoTo[to as any];
    if (typeof conversionRate !== 'number') {
      console.error("Invalid conversion rate for", to, ":", conversionRate);
      return;
    }
    
    const newConvertedAmount = amount * conversionRate;
    console.log("New Converted Amount:", newConvertedAmount);
    
    setConvertedAmount(newConvertedAmount);
  };
  
  
  

  return (
  <div
    className="w-full h-screen flex flex-wrap justify-center items-center bg-cover bg-no-repeat"
    style={{
      backgroundImage: `url('https://images.pexels.com/photos/3532540/pexels-photo-3532540.jpeg?auto=compress&cs=tinysrgb&w=400&lazy=load')`,
    }}
  >
    <div className="w-full">
      <div className="w-full max-w-md mx-auto border border-gray-60 rounded-lg p-5 backdrop-blur-sm bg-white/30">
        <form
          onSubmit={(e) => {
            e.preventDefault();
            convert();
          }}
        >
          <div className="w-full mb-1">
            <InputBox
              label="From"
              amount={amount}
              currencyOptions={options}
              onCurrencyChange={(currency: any) => {
                setFrom(currency); // Update 'from' when currency changes
              }}
              selectCurrency={from}
              onAmountChange={(amount: any) => {
                setAmount(amount);
              }}
            />
          </div>

          <div className="relative w-full h-0.5">
            <button
              type="button"
              className="absolute left-1/2 -translate-x-1/2 -translate-y-1/2 border-2 border-white rounded-md bg-blue-600 text-white px-2 py-0.5"
              onClick={swap}
            >
              Swap
            </button>
          </div>
          <div className="w-full mt-1 mb-4">
            <InputBox
              label="To"
              amount={convertedAmount}
              currencyOptions={options}
              onCurrencyChange={(currency: any) => {
                setTo(currency); // Update 'to' when currency changes
              }}
              selectCurrency={to} // Change to 'to'
            />
          </div>
          <button
            type="submit"
            className="w-full bg-blue-600 text-white px-4 py-3 rounded-lg"
          >
            Convert {from.toUpperCase()} to {to.toUpperCase()}
          </button>
        </form>
      </div>
    </div>
  </div>
);

}

export default App;
